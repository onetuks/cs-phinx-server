plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.25.0'
}

apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/spotless.gradle'

group = 'com.onetuks'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}

dependencies {

    // Netty/Resolver/DNS/Native/MacOS
    implementation('io.netty:netty-resolver-dns-native-macos:4.1.110.Final:osx-aarch_64')

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'io.projectreactor:reactor-test'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // DataBase
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // Docker
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:mysql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Arch-Unit
    testImplementation('com.tngtech.archunit:archunit:1.2.2')
}

tasks.named('test') {
    useJUnitPlatform()

    finalizedBy(tasks.jacocoTestReport)
}
